class Solution {
public:
    int old;
    int n,m;
    void dfs(vector<vector<int>>& v,int sr,int sc,int c,int old)
	{
		if(v[sr][sc]!=old)
			return;
		if(old==c)
			return;

		v[sr][sc]=c;
		if(sr!=0)
		{
			dfs(v,sr-1,sc,c,old);
		}
		if(sc!=m-1)
		{
			dfs(v,sr,sc+1,c,old);
		}
		if(sr!=n-1)
			dfs(v,sr+1,sc,c,old);
		if(sc!=0)
			dfs(v,sr,sc-1,c,old);
	}
    
    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        old=image[sr][sc];
        n=image.size();
        m=image[0].size();
        dfs(image,sr,sc,color,old);
        return image;
    }
};


//Aman Agrahari(21 yrs)
//https://leetcode.com/problems/flood-fill/
